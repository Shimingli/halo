server:
#  server.port: 运行程序的端口，默认8080
  port: 8090
  use-forward-headers: true
  undertow:
    io-threads: 2
    worker-threads: 36
    buffer-size: 1024
    directBuffers: true
spring:
  datasource:
#spring.datasource.type: 数据源类型，不需要修改  DruidDataSource是java语言中最好的数据库连接池之一，经常在项目中使用
    type: com.alibaba.druid.pool.DruidDataSource
     # H2database 配置 H2是一个用Java开发的嵌入式数据库，它本身只是一个类库，可以直接嵌入到应用项目中
#    driver-class-name: org.h2.Driver
#    url: jdbc:h2:file:~/halo/halo
#    username: admin
#    password: 123456  web-allow-others: 是否启用h2数据库可视化后台。

#MySql配置  我配置到自己的数据库中 driver-class-name: 数据库驱动程序，不需要修改
    driver-class-name: com.mysql.jdbc.Driver
# 数据库物理文件路径，建议不要修改。默认是~/halo/halo。
    url: jdbc:mysql://localhost:3306/shiming
# 数据库用户名，一定要修改，这是可以自定义的（使用halo-cli部署可以提示输入并修改）。
    username: root
    password: App123

#    spring.datasource.url =jdbc:mysql://localhost:3306/shiming
#    spring.datasource.username = root
#    spring.datasource.password = App123
#    spring.datasource.driverClassName =com.mysql.jdbc.Driver


#spring.h2.console.settings.web-allow-others: 是否启用h2数据库可视化后台。
#spring.h2.console.path: h2数据库可视化后台路径，可以自定义。
#spring.h2.console.enabled:: 是否启动H2控制台。
#H2是一个用Java开发的嵌入式数据库，它本身只是一个类库，可以直接嵌入到应用项目中。
#H2最大的用途在于可以同应用程序打包在一起发布，这样可以非常方便地存储少量结构化数据。
  h2:
    console:
      settings:
        web-allow-others: true
      path: /h2-console
      enabled: true
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
  freemarker:
    allow-request-override: false
    cache: false
    check-template-location: true
    charset: utf-8
    content-type: text/html
    expose-request-attributes: false
    expose-session-attributes: false
    expose-spring-macro-helpers: false
    suffix: .ftl
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
logging:
  file: ./logs/log.log


